services:
  web:
    build: .
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./.config:/misskey/.config:ro
      - files:/misskey/files

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - .config/docker.env
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  # mcaptcha:
  #  image: mcaptcha/mcaptcha:latest
  #  restart: unless-stopped
  #  ports:
  #    - 7493:7493
  #  env_file:
  #    - .config/docker.env
  #  environment:
  #    PORT: 7493
  #    MCAPTCHA_redis_URL: "redis://mcaptcha_redis/"
  #  depends_on:
  #    db:
  #      condition: service_healthy
  #    mcaptcha_redis:
  #      condition: service_healthy

  # mcaptcha_redis:
  #  image: mcaptcha/cache:latest
  #  restart: unless-stopped
  #  healthcheck:
  #    test: "redis-cli ping"
  #    interval: 5s
  #    retries: 20

  # meilisearch:
  #  image: getmeili/meilisearch:v1.3.4
  #  restart: unless-stopped
  #  environment:
  #    MEILI_NO_ANALYTICS: true
  #    MEILI_ENV: production
  #  env_file:
  #    - .config/meilisearch.env
  #  volumes:
  #    - meili_data:/meili_data

volumes:
  files:
  redis:
  db:
  meili_data:
